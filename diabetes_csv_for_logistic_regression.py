# -*- coding: utf-8 -*-
"""Diabetes.CSV for logistic regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ma0-mm_jHHSW3JVoyc2EFDwcZ_110_It
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

path="/content/Diabetes dataset.csv"
data=pd.read_csv(path)
print(data)

from sklearn import preprocessing
le=preprocessing.LabelEncoder()
data['BMI']=le.fit_transform(data['BMI'])
data.head()

x=data[['BMI','Age','Glucose','BloodPressure','SkinThickness','Insulin','DiabetesPedigreeFunction']]
y=data['Outcome']
print(x,y)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
print(x_train)
print(x_test)
print(y_train)
print(y_test)

from sklearn.linear_model import LogisticRegression
model=LogisticRegression()
model.fit(x_train,y_train)
y_pred=model.predict(x_test)
print(y_pred)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

from sklearn import metrics
cnf_matrix=metrics.confusion_matrix(y_test,y_pred)
cnf_matrix

class_names=[0,1]
fig, ax = plt.subplots()
tick_marks = np.arange(len(class_names))
plt.xticks(tick_marks, class_names)
plt.yticks(tick_marks, class_names)
sns.heatmap(pd.DataFrame(cnf_matrix), annot=True, cmap="YlGnBu", fmt='g')
ax.xaxis.set_label_position("top")
plt.tight_layout()
plt.title('Confusion matrix', y=1.4)
plt.ylabel('Actual label')
plt.xlabel('Predicted label')

print("Acccuracy:",metrics.accuracy_score(y_test,y_pred))
print("Precision:",metrics.precision_score(y_test,y_pred))
print("Recall:",metrics.recall_score(y_test,y_pred))
print("F1 Score:",metrics.f1_score(y_test,y_pred))